---
language: python
sudo: required
dist: trusty
cache:
  directories:
  - "$HOME/lxc"
  pip: true
matrix:
  fast_finish: true
env:
- ANSIBLE_GIT_VERSION='devel' # 2.6.x development branch
- ANSIBLE_VERSION='<2.6.0' # 2.5.x
- ANSIBLE_VERSION='<2.5.0' # 2.4.x
- ANSIBLE_VERSION='<2.4.0' # 2.4.x
install:
- if [ "$ANSIBLE_GIT_VERSION" ]; then pip install "https://github.com/ansible/ansible/archive/${ANSIBLE_GIT_VERSION}.tar.gz";
  else pip install "ansible${ANSIBLE_VERSION}"; fi
- ansible --version
# The following is needed for default Ansible 2.3 installations
- 'sudo mkdir -p /etc/ansible/roles && sudo chown $(whoami): /etc/ansible/roles'
- ansible-galaxy install lae.travis-lxc
- ansible-playbook tests/install.yml -i tests/inventory
- git archive --format tar.gz HEAD > systemli.letsencrypt.tar.gz && ansible-galaxy install
  systemli.letsencrypt.tar.gz,$(git rev-parse HEAD),systemli.letsencrypt && rm systemli.letsencrypt.tar.gz
before_script: cd tests/
script:
- ansible-playbook -i inventory deploy.yml --syntax-check
- ansible-playbook -i inventory -v deploy.yml --skip-tags molecule_test_skip
- 'ANSIBLE_STDOUT_CALLBACK=debug unbuffer ansible-playbook -i inventory -vv --skip-tags molecule_test_skip
  deploy.yml > idempotency.log 2>&1 || (e=$?; cat idempotency.log; exit $e)'
- 'grep -A1 "PLAY RECAP" idempotency.log | grep -qP "changed=0 .*failed=0 .*" &&
  (echo "Idempotence: PASS"; exit 0) || (echo "Idempotence: FAIL"; exit 1)'
- ANSIBLE_STDOUT_CALLBACK=debug ansible-playbook -i inventory -v test.yml
notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
